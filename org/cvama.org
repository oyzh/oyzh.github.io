#+HTML_MATHJAX: align:"center" mathml:t path:"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML" indent: 0em 
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="/css/style.css">
#+BEGIN_HTML
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({ TeX: { equationNumbers: {autoNumber: "AMS"} } });
</script>
#+END_HTML
#+OPTIONS: author:nil
#+OPTIONS: creator:nil
#+OPTIONS: timestamp:nil
#+OPTIONS: num:nil
-----
#+TITLE:计算机视觉
#+OPTIONS: toc:nil
根据李菲菲的视觉课参考的相应章节
* DONE F&P ch7 线性滤波
** 移不变线性系统
卷积表示了一大类系统的性质。特别的，大多数图像系统可以高度近似成具有以下三个重要性质：
+ *叠加性* ：表示为
$$R(f+g)=R(f)+R(g)$$
这意味着，对一组混合激励的响应等于对单个激励响应的和。
+ *按比例放缩* ：对零输入的响应是零。与叠加性类似，对一个按比例缩放输入的响应等于对输入响应的按比例缩放，也就是说：
$$R(kf)=kR(f)$$
同时具有叠加性和按比例缩放性质的系统，称为 *线性系统*。
+ *位移不变性* ：在位移不变性系系统中，对转移了位置的激励的响应等于对原激励的响应产生相同的位移。

一个同时满足线性和移不变性的系统称为 *移不变线性系统* ，或简称为系统。
*** 离散卷积
可以看出，作为一个系统，只要知道系统对0位移处的单位响应，就可以得到任何一个输入向量（或矩阵）的响应。响应的形式可以写成脉冲响应与输入的卷积。比如照相机系统，它是一个移不变线性系统，即任何处对光的响应都可以是零点处对同样光强度（频率）响应然后平移，并且满足线性公式。因此，我们只要知道这个系统对单位强度（频率）的光在零点处的响应，那么对于一张图片上任意位置都是不同光强（频率）时也可以通过卷积的方式得到响应。

一般所谓的卷积模板或核也可以看作一个系统。这时，输入是图片，通过这个系统得到输出。这个系统满足上面定义，因此可以做卷积。

*** 连续卷积
得到对脉冲的响应并做一种积分的方式称为卷积。
** 傅里叶变换
将基变为一些列正弦函数，把信号表示为无限个正弦函数的无限加权和。这意味着信号的快速变化是明显的，因为它们在新的基中对应于高频正弦项的高幅值。

傅里叶变换包含一个实部和一个虚部，考虑复函数的幅度和相位，并分别画出，因而分别称为幅度谱和相位谱（以二维的频率u，v为坐标）。图像的幅度谱经常是相似的。这一点看起来是自然现象，而不是定理证明。因此，图像的幅度谱提供的信息相当有限。
** 采样
从一个连续函数（比如到达照相机系统的亮光）得到一组离散点上的数值（就像照片中每一个像素值）称为采样。构建一个模型，可以准确地得到采样中丢失了什么样的信息。

用形式化模型的术语，对一个二维函数（而不是一维函数）进行采样时，得到一个矩阵。
*** 折叠失真
采样中会有信息的丢失。采样过慢的信号会显示错误的结果，原始信号中的高频空间元素在采样信号中会表现为低频元素——这种效应称为折叠失真。

采样信号的傅里叶变换：采样信号是原始信号和钉床函数结合的产物。根据卷积定理，两个函数乘积的傅里叶变换是两个函数傅里叶变换的卷积，这意味着采样信号的傅里叶变换等于函数的傅里叶变换同另一个钉床函数傅里叶变换的卷积。

由于将一个函数同一个位移 $\delta$ 函数卷积知识位移了这个函数。这意味着采样信号的傅里叶变换是信号的一系列傅里叶变换位移版本的和。

函数的傅里叶变换后的频率并不是充满整个频率空间，而是有最大值，即原函数有最大频率。比如正弦函数傅里叶变换后就只有一个频率值。用一定频率对函数进行采样后，对采样后的值做傅里叶变换等于对原函数做傅里叶变换并平移。因此只要平移后没有交叠，就可以使用采样傅里叶变化的逆变换来准确得到原信号，这里涉及奈奎斯特定理。这里要证明采样后的傅里叶变换是原函数傅里叶变换的平移。这非常重要。可以通过这个证明奈奎斯特定理，即为什么采样频率要两倍的最高频率才能重建。
** TODO 平滑与重采样
根据奈奎斯特定理，不能对一个图像取每k个像素的方法进行压缩。因为只有采样频率为原图像最高频率2倍才能复原。因此，如果将从原图像中去掉高于采样频率的空间频率，这样采样后的图像可以完全得到原图像去掉高频后的图像，这样的图像没有折叠失真，但因为去掉高频，所以会损失细节。这可以通过将原图像的傅里叶变换与二维删函数相乘实现，删函数是低通滤波。也可以让原函数卷积。

也可以使用高斯函数滤波，因为高斯函数变换到频域时也是高斯函数，它对低频响应大，对高频响应小。因此可以抑制高频分量，减少折叠失真。

事实上高斯函数不是一个特别好的低通滤波器。

算法图像的二倍重采样：
1. 对原图像使用低通滤波器（ $\sigma$ 在1～2个像素之间的高斯函数通常是适合的选择）
2. 产生一个新的图像，边的维度是原始图像的一般：把新图像第i，j个像素的值设置为滤波后图像的第2i，2j个像素。
   

-----
#+BEGIN_HTML
<a href="http://oyzh.github.io">Back to Homepage</a>
<br>
<a href="http://github.com/oyzh">Github</a>
#+END_HTML
* TODO F&P ch8
* TODO F&P ch15.2.2
* TODO Szeliski ch4.1.1
* TODO F&P ch1-3
* TODO H&Z ch6
* TODO H&Z ch10
* TODO F&P ch10
* TODO F&P ch14.2
* TODO F&P ch14.4
* TODO Szeliski ch8.4,8.5

